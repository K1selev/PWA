{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"catalog\"\n};\nconst _hoisted_2 = {\n  class: \"cat-cards-container\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"confirmation-modal\"\n};\nconst _hoisted_6 = {\n  class: \"confirmation-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"catalog-header\"\n  }, [_createElementVNode(\"h2\", null, \"Каталог котов\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Перебираем список котов и отображаем карточки \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cats, cat => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"cat-card\",\n      key: cat.id\n    }, [_createElementVNode(\"img\", {\n      src: require(`@/assets/photos/${cat.photo}`),\n      alt: \"Cat image\",\n      class: \"cat-image\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h3\", null, _toDisplayString(cat.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Цена: \" + _toDisplayString(cat.price) + \" ₽\", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.showConfirmationModal(cat)\n    }, \"Добавить в корзину\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Модальное окно подтверждения аренды \"), $data.showConfirmation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, \"Вы хотите добавить кота \\\"\" + _toDisplayString($data.selectedCat ? $data.selectedCat.name : '') + \"\\\" в корзину?\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addToCart && $options.addToCart(...args))\n  }, \"Да\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeConfirmation && $options.closeConfirmation(...args))\n  }, \"Отмена\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$data","cats","cat","id","src","require","photo","alt","_hoisted_3","_toDisplayString","name","price","onClick","$event","$options","showConfirmationModal","_hoisted_4","showConfirmation","_hoisted_5","_hoisted_6","selectedCat","_cache","args","addToCart","closeConfirmation"],"sources":["/Users/sergey/Desktop/Политех/Web/PWA/src/pages/RentalCatalog.vue"],"sourcesContent":["<template>\n  <div class=\"catalog\">\n    <div class=\"catalog-header\">\n      <h2>Каталог котов</h2>\n    </div>\n\n    <div class=\"cat-cards-container\">\n      <!-- Перебираем список котов и отображаем карточки -->\n      <div class=\"cat-card\" v-for=\"cat in cats\" :key=\"cat.id\">\n        <img :src=\"require(`@/assets/photos/${cat.photo}`)\" alt=\"Cat image\" class=\"cat-image\" />\n        <h3>{{ cat.name }}</h3>\n        <p>Цена: {{ cat.price }} ₽</p>\n        <button @click=\"showConfirmationModal(cat)\">Добавить в корзину</button>\n      </div>\n    </div>\n\n    <!-- Модальное окно подтверждения аренды -->\n    <div v-if=\"showConfirmation\" class=\"confirmation-modal\">\n      <div class=\"confirmation-content\">\n        <p>Вы хотите добавить кота \"{{ selectedCat ? selectedCat.name : '' }}\" в корзину?</p>\n        <button @click=\"addToCart\">Да</button>\n        <button @click=\"closeConfirmation\">Отмена</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RentalCatalog\",\n  data() {\n    return {\n      cats: [\n        { id: 1, name: \"Барсик\", price: 500, photo: \"photo1.jpg\" },\n        { id: 2, name: \"Кеша\", price: 450, photo: \"photo2.jpg\" },\n        { id: 3, name: \"Сэм\", price: 400, photo: \"photo3.jpg\" },\n        { id: 4, name: \"Мурка\", price: 600, photo: \"photo4.jpg\" },\n        { id: 5, name: \"Тимоша\", price: 550, photo: \"photo5.jpg\" },\n        { id: 6, name: \"Жучка\", price: 500, photo: \"photo6.jpg\" }\n      ],\n      showConfirmation: false, // Для отображения модального окна\n      selectedCat: null, // Кот, который будет добавлен в корзину\n    };\n  },\n  methods: {\n    // Открытие модального окна с выбранным котом\n    showConfirmationModal(cat) {\n      this.selectedCat = cat;\n      this.showConfirmation = true;\n    },\n    \n    // Добавление кота в корзину\n    addToCart() {\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n      // Добавляем выбранного кота в корзину\n      cart.push(this.selectedCat);\n      localStorage.setItem('cart', JSON.stringify(cart));\n\n      this.closeConfirmation(); // Закрываем модальное окно\n    },\n    \n    // Закрытие модального окна\n    closeConfirmation() {\n      this.showConfirmation = false;\n      this.selectedCat = null;\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Основной контейнер каталога */\n.catalog {\n  padding: 20px;\n  margin-top: 80px;\n}\n\n.catalog-header h2 {\n  font-size: 2rem;\n  margin-bottom: 20px;\n}\n\n.cat-cards-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n}\n\n.cat-card {\n  background-color: #f5f5f5;\n  padding: 15px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n}\n\n.cat-card:hover {\n  transform: scale(1.05);\n}\n\n.cat-image {\n  width: 100%;\n  height: auto;\n  border-radius: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #28a745;\n  color: white;\n  font-size: 1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #218838;\n}\n\n/* Модальное окно для подтверждения */\n.confirmation-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1100;\n}\n\n.confirmation-content {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  width: 300px;\n}\n\n.confirmation-content button {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAKbA,KAAK,EAAC;AAAqB;mBANpC;mBAAA;;EAAAC,GAAA;EAiBiCD,KAAK,EAAC;;;EAC5BA,KAAK,EAAC;AAAsB;;uBAjBrCE,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAgB,IACzBI,mBAAA,CAAsB,YAAlB,eAAa,E,sBAGnBA,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,mDAAsD,G,kBACtDJ,mBAAA,CAKMK,SAAA,QAbZC,WAAA,CAQ0CC,KAAA,CAAAC,IAAI,EAAXC,GAAG;yBAAhCT,mBAAA,CAKM;MALDF,KAAK,EAAC,UAAU;MAAsBC,GAAG,EAAEU,GAAG,CAACC;QAClDR,mBAAA,CAAwF;MAAlFS,GAAG,EAAEC,OAAO,oBAAoBH,GAAG,CAACI,KAAK;MAAKC,GAAG,EAAC,WAAW;MAAChB,KAAK,EAAC;4BATlFiB,UAAA,GAUQb,mBAAA,CAAuB,YAAAc,gBAAA,CAAhBP,GAAG,CAACQ,IAAI,kBACff,mBAAA,CAA8B,WAA3B,QAAM,GAAAc,gBAAA,CAAGP,GAAG,CAACS,KAAK,IAAG,IAAE,iBAC1BhB,mBAAA,CAAuE;MAA9DiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,qBAAqB,CAACb,GAAG;OAAG,oBAAkB,iBAZtEc,UAAA,E;oCAgBInB,mBAAA,yCAA4C,EACjCG,KAAA,CAAAiB,gBAAgB,I,cAA3BxB,mBAAA,CAMM,OANNyB,UAMM,GALJvB,mBAAA,CAIM,OAJNwB,UAIM,GAHJxB,mBAAA,CAAqF,WAAlF,4BAAyB,GAAAc,gBAAA,CAAGT,KAAA,CAAAoB,WAAW,GAAGpB,KAAA,CAAAoB,WAAW,CAACV,IAAI,SAAQ,eAAY,iBACjFf,mBAAA,CAAsC;IAA7BiB,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,SAAA,IAAAT,QAAA,CAAAS,SAAA,IAAAD,IAAA,CAAS;KAAE,IAAE,GAC7B3B,mBAAA,CAAkD;IAAzCiB,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAU,iBAAA,IAAAV,QAAA,CAAAU,iBAAA,IAAAF,IAAA,CAAiB;KAAE,QAAM,E,OArBjDzB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}