{"ast":null,"code":"export default {\n  name: 'PhotoGrid',\n  props: {\n    view: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      photos: [require('@/assets/photos/photo1.jpg'), require('@/assets/photos/photo2.jpg'), require('@/assets/photos/photo3.jpg'), require('@/assets/photos/photo4.jpg'), require('@/assets/photos/photo5.jpg'), require('@/assets/photos/photo6.jpg')]\n    };\n  },\n  computed: {\n    gridClass() {\n      if (this.view === 'three') {\n        return 'grid-three';\n      } else {\n        //if (this.view === 'two') {\n        return 'grid-one';\n      }\n      // return 'grid-one'; // Режим для одного изображения\n    }\n  }\n};","map":{"version":3,"names":["name","props","view","type","String","required","data","photos","require","computed","gridClass"],"sources":["/Users/sergey/Desktop/Политех/Web/photo-grid-pwa/src/components/PhotoGrid.vue"],"sourcesContent":["<template>\n  <div :class=\"['photo-grid', gridClass]\">\n    <div v-for=\"(src, index) in photos\" :key=\"index\" class=\"photo-item\">\n      <img :src=\"src\" :alt=\"'Photo ' + (index + 1)\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PhotoGrid',\n  props: {\n    view: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      photos: [\n        require('@/assets/photos/photo1.jpg'),\n        require('@/assets/photos/photo2.jpg'),\n        require('@/assets/photos/photo3.jpg'),\n        require('@/assets/photos/photo4.jpg'),\n        require('@/assets/photos/photo5.jpg'),\n        require('@/assets/photos/photo6.jpg'),\n      ],\n    };\n  },\n  computed: {\n    gridClass() {\n      if (this.view === 'three') {\n        return 'grid-three';\n      } else { //if (this.view === 'two') {\n        return 'grid-one';\n      }\n      // return 'grid-one'; // Режим для одного изображения\n    },\n  },\n};\n</script>\n\n<style scoped>\n.photo-grid {\n  display: grid;\n  gap: 20px;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n/* Стили для отображения трех изображений в строке */\n.grid-three {\n  grid-template-columns: repeat(3, 1fr); /* Три изображения в строке */\n}\n\n/* Стили для двух изображений в строке */\n/* .grid-two {\n  grid-template-columns: repeat(2, 1fr);\n} */\n\n/* Стили для одного изображения в строке */\n.grid-one {\n  grid-template-columns: 1fr; /* Одно изображение */\n}\n\n.photo-item {\n  aspect-ratio: 1 / 1; /* Пропорции для изображений */\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.photo-item img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* Масштабирование с обрезкой */\n}\n\n/* Адаптация сетки для маленьких экранов */\n@media (max-width: 767px) {\n  .photo-grid {\n    grid-template-columns: repeat(2, 1fr); /* Два изображения на мобильных экранах */\n  }\n}\n</style>\n"],"mappings":"AASA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CACNC,OAAO,CAAC,4BAA4B,CAAC,EACrCA,OAAO,CAAC,4BAA4B,CAAC,EACrCA,OAAO,CAAC,4BAA4B,CAAC,EACrCA,OAAO,CAAC,4BAA4B,CAAC,EACrCA,OAAO,CAAC,4BAA4B,CAAC,EACrCA,OAAO,CAAC,4BAA4B,CAAC;IAEzC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACR,IAAG,KAAM,OAAO,EAAE;QACzB,OAAO,YAAY;MACrB,OAAO;QAAE;QACP,OAAO,UAAU;MACnB;MACA;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}