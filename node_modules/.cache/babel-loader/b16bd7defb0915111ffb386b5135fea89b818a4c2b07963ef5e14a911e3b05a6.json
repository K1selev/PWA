{"ast":null,"code":"export default {\n  name: 'OrderConfirmation',\n  data() {\n    return {\n      form: {\n        name: '',\n        address: '',\n        phone: ''\n      },\n      orderSuccess: false\n    };\n  },\n  methods: {\n    submitOrder() {\n      if (this.form.name && this.form.address && this.form.phone) {\n        // Логика для отправки данных (например, в API или localStorage)\n        console.log('Заказ отправлен:', this.form);\n\n        // Очистка формы и подтверждение\n        this.form = {\n          name: '',\n          address: '',\n          phone: ''\n        };\n        this.orderSuccess = true;\n\n        // Очистка корзины\n        localStorage.removeItem('cart');\n      } else {\n        alert('Пожалуйста, заполните все поля!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","address","phone","orderSuccess","methods","submitOrder","console","log","localStorage","removeItem","alert"],"sources":["/Users/sergey/Desktop/Политех/Web/PWA/src/pages/OrderConfirmation.vue"],"sourcesContent":["<template>\n    <div class=\"confirmation-page\">\n      <h2>Оформление заказа</h2>\n      <form @submit.prevent=\"submitOrder\">\n        <div class=\"form-group\">\n          <label for=\"name\">Имя:</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            v-model=\"form.name\"\n            required\n            placeholder=\"Введите ваше имя\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"address\">Адрес:</label>\n          <input\n            id=\"address\"\n            type=\"text\"\n            v-model=\"form.address\"\n            required\n            placeholder=\"Введите ваш адрес\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"phone\">Телефон:</label>\n          <input\n            id=\"phone\"\n            type=\"tel\"\n            v-model=\"form.phone\"\n            required\n            placeholder=\"Введите ваш номер телефона\"\n          />\n        </div>\n        <button type=\"submit\" class=\"confirm-button\">Подтвердить заказ</button>\n      </form>\n      <p v-if=\"orderSuccess\" class=\"success-message\">Ваш заказ успешно оформлен!</p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'OrderConfirmation',\n    data() {\n      return {\n        form: {\n          name: '',\n          address: '',\n          phone: '',\n        },\n        orderSuccess: false,\n      };\n    },\n    methods: {\n      submitOrder() {\n        if (this.form.name && this.form.address && this.form.phone) {\n          // Логика для отправки данных (например, в API или localStorage)\n          console.log('Заказ отправлен:', this.form);\n  \n          // Очистка формы и подтверждение\n          this.form = { name: '', address: '', phone: '' };\n          this.orderSuccess = true;\n  \n          // Очистка корзины\n          localStorage.removeItem('cart');\n        } else {\n          alert('Пожалуйста, заполните все поля!');\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .confirmation-page {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #f9f9f9;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n  }\n  \n  h2 {\n    text-align: center;\n    color: #3a3a3a;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: #3a3a3a;\n  }\n  \n  input {\n    width: 100%;\n    padding: 10px;\n    font-size: 1em;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    outline: none;\n    transition: border-color 0.3s ease;\n  }\n  \n  input:focus {\n    border-color: #42b983;\n  }\n  \n  .confirm-button {\n    background-color: #42b983;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    font-size: 1em;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    width: 100%;\n  }\n  \n  .confirm-button:hover {\n    background-color: #379d72;\n  }\n  \n  .success-message {\n    margin-top: 20px;\n    text-align: center;\n    color: #42b983;\n    font-size: 1.2em;\n  }\n  </style>\n  "],"mappings":"AAyCE,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;MACT,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACL,IAAI,CAACF,IAAG,IAAK,IAAI,CAACE,IAAI,CAACC,OAAM,IAAK,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;QAC1D;QACAI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACP,IAAI,CAAC;;QAE1C;QACA,IAAI,CAACA,IAAG,GAAI;UAAEF,IAAI,EAAE,EAAE;UAAEG,OAAO,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC;QAChD,IAAI,CAACC,YAAW,GAAI,IAAI;;QAExB;QACAK,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MACjC,OAAO;QACLC,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}