{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"view-toggle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PhotoGrid = _resolveComponent(\"PhotoGrid\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Photo Grid\", -1 /* HOISTED */)), _createCommentVNode(\" Кнопка переключения вида с двумя иконками \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleView('one')),\n    class: _normalizeClass({\n      active: $data.view === 'one'\n    })\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"filter_none\", -1 /* HOISTED */)]), 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.toggleView('three')),\n    class: _normalizeClass({\n      active: $data.view === 'three'\n    })\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"calendar_view\", -1 /* HOISTED */)]), 2 /* CLASS */)])]), _createElementVNode(\"main\", null, [_createVNode(_component_PhotoGrid, {\n    view: $data.view\n  }, null, 8 /* PROPS */, [\"view\"])])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","onClick","_cache","$event","$options","toggleView","_normalizeClass","active","$data","view","_createVNode","_component_PhotoGrid"],"sources":["/Users/sergey/Desktop/Политех/Web/photo-grid-pwa/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header>\n      <h1>Photo Grid</h1>\n      <!-- Кнопка переключения вида с двумя иконками -->\n      <div class=\"view-toggle\">\n        <button\n          @click=\"toggleView('one')\"\n          :class=\"{ active: view === 'one' }\"\n        >\n          <span class=\"material-icons\">filter_none</span>\n        </button>\n        <button\n          @click=\"toggleView('three')\"\n          :class=\"{ active: view === 'three' }\"\n        >\n          <span class=\"material-icons\">calendar_view</span>\n        </button>\n      </div>\n    </header>\n    <main>\n      <PhotoGrid :view=\"view\" />\n    </main>\n  </div>\n</template>\n\n<script>\nimport PhotoGrid from './components/PhotoGrid.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    PhotoGrid,\n  },\n  data() {\n    return {\n      view: 'three', // Начальный режим отображения (по умолчанию — 2 изображения в строке)\n    };\n  },\n  methods: {\n    // Переключение между видами\n    toggleView(viewType) {\n      this.view = viewType;\n    },\n  },\n};\n</script>\n\n<style>\n/* Основные стили для header */\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background: #333;\n  color: white;\n}\n\n.view-toggle {\n  display: flex;\n  gap: 10px;\n}\n\n.view-toggle button {\n  background: transparent;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  padding: 10px;\n  cursor: pointer;\n  font-size: 24px;\n}\n\n.view-toggle button.active {\n  border-color: #007bff; /* Подсвечиваем активную кнопку */\n  background-color: #007bff; /* Добавляем фоновый цвет */\n  color: white;\n}\n\nbutton .material-icons {\n  font-size: 24px;\n}\n\nbutton:focus {\n  outline: none;\n}\n\n/* Эффект при наведении на кнопки */\n.view-toggle button:hover {\n  background: rgba(0, 123, 255, 0.1);\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAIJC,KAAK,EAAC;AAAa;;;uBAJ5BC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAiBS,iB,0BAhBPA,mBAAA,CAAmB,YAAf,YAAU,sBACdC,mBAAA,+CAAkD,EAClDD,mBAAA,CAaM,OAbNE,UAaM,GAZJF,mBAAA,CAKS;IAJNG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;IACjBV,KAAK,EARhBW,eAAA;MAAAC,MAAA,EAQ4BC,KAAA,CAAAC,IAAI;IAAA;gCAEtBX,mBAAA,CAA+C;IAAzCH,KAAK,EAAC;EAAgB,GAAC,aAAW,oB,mBAE1CG,mBAAA,CAKS;IAJNG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;IACjBV,KAAK,EAdhBW,eAAA;MAAAC,MAAA,EAc4BC,KAAA,CAAAC,IAAI;IAAA;gCAEtBX,mBAAA,CAAiD;IAA3CH,KAAK,EAAC;EAAgB,GAAC,eAAa,oB,uBAIhDG,mBAAA,CAEO,eADLY,YAAA,CAA0BC,oBAAA;IAAdF,IAAI,EAAED,KAAA,CAAAC;EAAI,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}